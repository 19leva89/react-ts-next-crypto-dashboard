generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserRole {
  USER
  ADMIN
}

model User {
  id               Int               @id @default(autoincrement())
  fullName         String
  email            String            @unique
  password         String
  avatar           String?
  //
  role             UserRole          @default(USER)
  verified         DateTime?
  verificationCode VerificationCode?
  //
  provider         String?
  providerId       String?
  //
  createdAt        DateTime          @default(now())
  updatedAt        DateTime          @updatedAt
}

model VerificationCode {
  id        Int      @id @default(autoincrement())
  //
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    Int      @unique
  //
  code      String
  //
  createdAt DateTime @default(now())

  @@unique([userId, code])
}

model TrendingData {
  id        Int      @id @default(autoincrement())
  key       String   @unique
  value     Json
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Category {
  id        Int      @id @default(autoincrement())
  key       String   @unique
  value     String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Coin {
  id        Int      @id @default(autoincrement())
  key       String   @unique
  coinId    String   @unique
  value     Json
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model MarketChart {
  id        Int      @id @default(autoincrement())
  key       String   @unique
  coinId    String
  value     Json
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Aidrop {
  id        Int      @id @default(autoincrement())
  key       String   @unique
  value     Json
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
